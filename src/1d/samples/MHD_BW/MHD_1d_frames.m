function MHD_1d_frames(J,N)
%MHD1d_frames   Generates snapshots of solution of 1D MHD EQNs 
%   
%   MHD1d_frames(N,J) where J is the number of grid cells and N the total 
%   number of outputs generated by CentPack, loads the output files of 
%   CentPack's MHD_1d_FD2 example and plots the density, x- and y-velocity 
%   components, y-magnetic field component, and pressure profiles at dt_out
%   intervals over the length of the simulation
%	
%	CentPack's output is written to the directory 
%
%	CP_root/samples/MHD_1d_FD2/rho_files/
%   CP_root/samples/MHD_1d_FD2/u1_files/
%   CP_root/samples/MHD_1d_FD2/u2_files/
%   CP_root/samples/MHD_1d_FD2/b2_files/
%   CP_root/samples/MHD_1d_FD2/p_files/   
%
%	where CP_root stands for your CentPack installation directory.  The 
%   data is loaded into matlab with the built-in load command and ploted 
%	over the solution domain, the resulting images are written as a .png 
%	files to the directories
% 
%	CP_root/samples/MHD_1d_FD2/rho_frames/
%	CP_root/samples/MHD_1d_FD2/u1_frames/
%   CP_root/samples/MHD_1d_FD2/u2_frames/
%	CP_root/samples/MHD_1d_FD2/b2_frames/
%   CP_root/samples/MHD_1d_FD2/p_frames/
%	
%	A number of open source tools is available to create an animated 
%   sequence of the generated frames, one possiblitiy in UNIX-like systems 
%   is to run the following commands from the command window
%
%	> cd CP_root/samples/MHD_1d_FD2/VAR_frames/  
%	> convert -adjoin -delay 5 *.png VAR_movie.gif
%
%	These will generate the animation VAR_movie.gif, (VAR = rho, u1, u2,
%	b2, p)
%
%	Remark: convert is a command line application of the poen source graphics
%	suite ImageMagick(C), commonly distributed with UNIX-like systems
%	
%	Copyright 2004-2010 Jorge Balbas and Eitan Tadmor 
%   $Revision: 1.0 $  $Date: 2010/04/14
%
caxis(caxis);

x = zeros(1,J);
dx = 2.0/J;

x(1) = -1.0 + 0.5*dx;

for j = 2:J
    x(j) = x(j-1) + dx;
end

for n=0:N-1

	count = int2str(n);
	s_rho = strcat('rho_files/rho_', count);
	s_u1 = strcat('u1_files/u1_', count);
	s_u2 = strcat('u2_files/u2_', count);
	s_b2 = strcat('b2_files/b2_', count);
	s_p = strcat('p_files/p_', count);
	
	if n<10
		count = strcat('0', count);
	end;
	
	S_rho = strcat('rho_frames/rho_', count);
	S_u1 = strcat('u1_frames/u1_', count);
	S_u2 = strcat('u2_frames/u2_', count);
	S_b2 = strcat('b2_frames/b2_', count);
	S_p = strcat('p_frames/p_', count);
	
	rho=load(s_rho);
	u1 = load(s_u1);
	u2 = load(s_u2);
	b2 = load(s_b2);
	p = load(s_p);
	
	plot(x,rho,'.-');
	axis([-1.0 1.0 0.1 1.05]);
	print ('-dpng', '-r0', S_rho);
	
	plot(x,u1,'.-');
	axis([-1.0 1.0 -0.3 0.7]);
	print ('-dpng', '-r0', S_u1);
	
	plot(x,u2,'.-');
	axis([-1.0 1.0 -1.7 0.05]);
	print ('-dpng', '-r0', S_u2);
	
	plot(x,b2,'.-');
	axis([-1.0 1.0 -1.05 1.05]);
	print ('-dpng', '-r0', S_b2);
	
	plot(x,p,'.-');
	axis([-1.0 1.0 0.05 1.05]);
	print ('-dpng', '-r0', S_p);

end;
